// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using on_the_sky;

#nullable disable

namespace on_the_sky.Data.Migrations
{
    [DbContext(typeof(Datacontext))]
    [Migration("20250304160903_newdatabase")]
    partial class newdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("on_the_sky.core.entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersDB");
                });

            modelBuilder.Entity("on_the_sky.Flight", b =>
                {
                    b.Property<int>("flightid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("flightid"), 1L, 1);

                    b.Property<int>("Maximum")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int>("countryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("flighttime")
                        .HasColumnType("datetime2");

                    b.HasKey("flightid");

                    b.HasIndex("countryID");

                    b.ToTable("FlightDB");
                });

            modelBuilder.Entity("on_the_sky.Places", b =>
                {
                    b.Property<int>("countryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("countryid"), 1L, 1);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("countryid");

                    b.ToTable("PlacesDB");
                });

            modelBuilder.Entity("on_the_sky.Travels", b =>
                {
                    b.Property<int>("passengerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("passengerid"), 1L, 1);

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("amounttickets")
                        .HasColumnType("int");

                    b.Property<string>("passengername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("passengerid");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("TravelsDB");
                });

            modelBuilder.Entity("on_the_sky.Flight", b =>
                {
                    b.HasOne("on_the_sky.Places", "country")
                        .WithMany("flight_list")
                        .HasForeignKey("countryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("on_the_sky.Travels", b =>
                {
                    b.HasOne("on_the_sky.Flight", "Flight")
                        .WithMany("passangers")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("on_the_sky.core.entities.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("User");
                });

            modelBuilder.Entity("on_the_sky.Flight", b =>
                {
                    b.Navigation("passangers");
                });

            modelBuilder.Entity("on_the_sky.Places", b =>
                {
                    b.Navigation("flight_list");
                });
#pragma warning restore 612, 618
        }
    }
}
